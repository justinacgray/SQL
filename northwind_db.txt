=======================================
SQL QUERIES
=======================================

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

======================================
select category_name,description 
from categories
order by category_name;
======================================
select category_name,description 
from categories
order by category_name;



======================================
Show all the contact_name, address, city of 
all customers which are not 
from 'Germany', 'Mexico', 'Spain'
======================================
select contact_name, address, city
from customers
where country not in ('Germany', 'Mexico', 'Spain');




======================================
Show order_date, shipped_date, customer_id, Freight of 
all orders placed on 2018 Feb 26
======================================

select order_date, shipped_date, customer_id, freight
from orders
where order_date = '2018-02-26';




======================================
Show the employee_id, order_id, customer_id, required_date, 
shipped_date from all orders shipped later than the required date

======================================

select employee_id, order_id, customer_id, required_date, shipped_date
from orders
where shipped_date > required_date;






======================================
Show all the even numbered Order_id from the orders table

======================================
select order_id
from orders
where order_id % 2 == 0;


======================================
Show the city, company_name, contact_name of all customers 
from cities which contains the letter 'L' in the city name, 
sorted by contact_name
======================================
select city, company_name, contact_name 
from customers
where city like '%l%'
order by contact_name;



======================================
Show the company_name, contact_name, fax number 
of all customers that has a fax number. (not null)
======================================
select company_name, contact_name, fax
from customers
where fax not null;



======================================
Show the first_name, last_name of the most recently hired employee.
======================================
select first_name, last_name, hire_date
from employees
order by hire_date desc
limit 1;


======================================
Show the average unit price rounded to 2 decimal places, the total 
units in stock, total discontinued products from the products table.
======================================
select round(Avg(unit_price), 2) as average_unit_price, 
		sum(units_in_stock) as total_units_in_stock, 
        sum(discontinued) as total_discontinued
from products;




======================================
Show the ProductName, CompanyName, CategoryName from the products, 
suppliers, and categories table
======================================

select prod.product_name, sup.company_name, cat.category_name
from products prod
join suppliers sup
on prod.supplier_id = sup.supplier_id
join categories cat
on prod.category_id = cat.category_id;




======================================
Show the category_name and the average product unit price for each 
category rounded to 2 decimal places.
======================================

--without groupby clause it gives the first value in the categories table

select round(avg(prod.unit_price), 2) as average_category_price, cat.category_name
from products prod
join categories cat
on prod.category_id = cat.category_id
group by cat.category_name;



======================================
Show the city, company_name, contact_name from the customers and suppliers table merged together.
Create a column which contains 'customers' or 'suppliers' depending on the table it came from.
======================================
-- no duplicates use just UNION
-- with duplicates use UNION ALL
-- as long as te tables has the same fields name UNION can be used to combine tables
-- Use UNION when you need to combine row from two different queries together.
# https://www.essentialsql.com/what-is-the-difference-between-a-join-and-a-union/



select city, company_name, contact_name, "suppliers" as type
from suppliers 
union all select city, company_name, contact_name, "customers" as type
from customers;




======================================
Show the employee's first_name and last_name, a "num_orders" column with a count of the orders 
taken, and a column called "Shipped" that displays "On Time" if the order shipped on time and 
"Late" if the order shipped late.
Order by employee last_name, then by first_name, and then descending by number of orders.
======================================
select emp.first_name, emp.last_name, count(ord.order_id) as num_orders, 
	case
    	when shipped_date < required_date then 'On Time'
    	else 'Late'
        
    end as shipped
from employees emp
join orders ord
on emp.employee_id = ord.employee_id
group by shipped, emp.employee_id
order by last_name, first_name, num_orders desc

;




======================================

======================================




======================================

======================================




